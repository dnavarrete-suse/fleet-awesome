# Default values for caddy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

listenPort: 80

image:
  repository: caddy
  pullPolicy: IfNotPresent
  tagSuffix: "-alpine"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.9.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "caddy"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
 readOnlyRootFilesystem: true
 runAsNonRoot: true
 runAsUser: 1000

service:
  type: ClusterIP
  port: 80

## by default, ingress handled by ngrok tunnel & oauth
## 2025_0418 switched to gw-api and ngrok-operator, disabled
ingress:
  enabled: no
  className: "ngrok"
  annotations:
    k8s.ngrok.com/modules: ngrok-module-set
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ngrok.app.goatherd.casa
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 20m
    memory: 32Mi

health:
  path: /healthz
  port: 9999

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: caddy-srv
  persistentVolumeClaim:
    claimName: nfs-static-pvc

# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: caddy-srv
  mountPath: "/srv"
  readOnly: false

config:
  # -- if true, it will enable debugging
  debug: false
  # -- config going to a global section. See https://caddyserver.com/docs/caddyfile/options for reference
  global: |
    auto_https off
    acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
    log {
      output stdout
    }

  caddyFile: |
    http:// {
      root * /srv
      encode zstd gzip
      file_server browse
    }

nodeSelector: {}

tolerations: []

affinity: {}

###
